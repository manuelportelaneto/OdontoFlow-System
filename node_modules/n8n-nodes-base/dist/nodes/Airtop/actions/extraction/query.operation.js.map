{"version":3,"sources":["../../../../../nodes/Airtop/actions/extraction/query.operation.ts"],"sourcesContent":["import {\n\ttype IExecuteFunctions,\n\ttype INodeExecutionData,\n\ttype INodeProperties,\n} from 'n8n-workflow';\n\nimport { outputSchemaField, parseJsonOutputField } from '../common/fields';\nimport { parseJsonIfPresent } from '../common/output.utils';\nimport { executeRequestWithSessionManagement } from '../common/session.utils';\n\nexport const description: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Prompt',\n\t\tname: 'prompt',\n\t\ttype: 'string',\n\t\ttypeOptions: {\n\t\t\trows: 4,\n\t\t},\n\t\trequired: true,\n\t\tdefault: '',\n\t\tplaceholder: 'e.g. Is there a login form in this page?',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['extraction'],\n\t\t\t\toperation: ['query'],\n\t\t\t},\n\t\t},\n\t\tdescription: 'The prompt to query the page content',\n\t},\n\t{\n\t\tdisplayName: 'Additional Fields',\n\t\tname: 'additionalFields',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Field',\n\t\tdefault: {},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['extraction'],\n\t\t\t\toperation: ['query'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\t...outputSchemaField,\n\t\t\t},\n\t\t\t{\n\t\t\t\t...parseJsonOutputField,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Include Visual Analysis',\n\t\t\t\tname: 'includeVisualAnalysis',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to analyze the web page visually when fulfilling the request',\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst prompt = this.getNodeParameter('prompt', index, '') as string;\n\tconst additionalFields = this.getNodeParameter('additionalFields', index, {});\n\tconst outputSchema = additionalFields.outputSchema;\n\tconst includeVisualAnalysis = additionalFields.includeVisualAnalysis;\n\n\tconst result = await executeRequestWithSessionManagement.call(this, index, {\n\t\tmethod: 'POST',\n\t\tpath: '/sessions/{sessionId}/windows/{windowId}/page-query',\n\t\tbody: {\n\t\t\tprompt,\n\t\t\tconfiguration: {\n\t\t\t\texperimental: {\n\t\t\t\t\tincludeVisualAnalysis: includeVisualAnalysis ? 'enabled' : 'disabled',\n\t\t\t\t},\n\t\t\t\t...(outputSchema ? { outputSchema } : {}),\n\t\t\t},\n\t\t},\n\t});\n\n\tconst nodeOutput = parseJsonIfPresent.call(this, index, result);\n\treturn this.helpers.returnJsonArray(nodeOutput);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,oBAAwD;AACxD,oBAAmC;AACnC,qBAAoD;AAE7C,MAAM,cAAiC;AAAA,EAC7C;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,IACA,UAAU;AAAA,IACV,SAAS;AAAA,IACT,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,YAAY;AAAA,QACvB,WAAW,CAAC,OAAO;AAAA,MACpB;AAAA,IACD;AAAA,IACA,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,YAAY;AAAA,QACvB,WAAW,CAAC,OAAO;AAAA,MACpB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR;AAAA,QACC,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QACC,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AACD;AAEA,eAAsB,QAErB,OACgC;AAChC,QAAM,SAAS,KAAK,iBAAiB,UAAU,OAAO,EAAE;AACxD,QAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,OAAO,CAAC,CAAC;AAC5E,QAAM,eAAe,iBAAiB;AACtC,QAAM,wBAAwB,iBAAiB;AAE/C,QAAM,SAAS,MAAM,mDAAoC,KAAK,MAAM,OAAO;AAAA,IAC1E,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,MACL;AAAA,MACA,eAAe;AAAA,QACd,cAAc;AAAA,UACb,uBAAuB,wBAAwB,YAAY;AAAA,QAC5D;AAAA,QACA,GAAI,eAAe,EAAE,aAAa,IAAI,CAAC;AAAA,MACxC;AAAA,IACD;AAAA,EACD,CAAC;AAED,QAAM,aAAa,iCAAmB,KAAK,MAAM,OAAO,MAAM;AAC9D,SAAO,KAAK,QAAQ,gBAAgB,UAAU;AAC/C;","names":[]}