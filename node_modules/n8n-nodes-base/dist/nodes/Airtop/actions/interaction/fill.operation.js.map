{"version":3,"sources":["../../../../../nodes/Airtop/actions/interaction/fill.operation.ts"],"sourcesContent":["import {\n\ttype IExecuteFunctions,\n\ttype INodeExecutionData,\n\ttype INodeProperties,\n\tNodeApiError,\n} from 'n8n-workflow';\n\nimport { ERROR_MESSAGES, OPERATION_TIMEOUT } from '../../constants';\nimport {\n\tvalidateRequiredStringField,\n\tvalidateSessionAndWindowId,\n\tvalidateAirtopApiResponse,\n} from '../../GenericFunctions';\nimport { apiRequest } from '../../transport';\nimport type { IAirtopResponse } from '../../transport/types';\n\nexport const description: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Form Data',\n\t\tname: 'formData',\n\t\ttype: 'string',\n\t\ttypeOptions: {\n\t\t\trows: 4,\n\t\t},\n\t\trequired: true,\n\t\tdefault: '',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['interaction'],\n\t\t\t\toperation: ['fill'],\n\t\t\t},\n\t\t},\n\t\tdescription: 'The information to fill into the form written in natural language',\n\t\tplaceholder: 'e.g. \"Name: John Doe, Email: john.doe@example.com\"',\n\t},\n];\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tindex: number,\n\ttimeout = OPERATION_TIMEOUT,\n): Promise<INodeExecutionData[]> {\n\tconst { sessionId, windowId } = validateSessionAndWindowId.call(this, index);\n\tconst formData = validateRequiredStringField.call(this, index, 'formData', 'Form Data');\n\n\t// run automation\n\tconst asyncAutomationResponse = await apiRequest.call(\n\t\tthis,\n\t\t'POST',\n\t\t`/async/sessions/${sessionId}/windows/${windowId}/execute-automation`,\n\t\t{\n\t\t\tautomationId: 'auto',\n\t\t\tparameters: {\n\t\t\t\tcustomData: formData,\n\t\t\t},\n\t\t},\n\t);\n\n\tconst reqId = asyncAutomationResponse.requestId as string;\n\n\t// Poll status every second until it's completed or timeout is reached\n\tconst startTime = Date.now();\n\tlet automationStatusResponse: IAirtopResponse;\n\n\twhile (true) {\n\t\tautomationStatusResponse = await apiRequest.call(this, 'GET', `/requests/${reqId}/status`);\n\t\tconst status = automationStatusResponse?.status ?? '';\n\n\t\tvalidateAirtopApiResponse(this.getNode(), automationStatusResponse);\n\n\t\tif (status === 'completed' || status === 'error') {\n\t\t\tbreak;\n\t\t}\n\n\t\tconst elapsedTime = Date.now() - startTime;\n\t\tif (elapsedTime >= timeout) {\n\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\tmessage: ERROR_MESSAGES.TIMEOUT_REACHED,\n\t\t\t\tcode: 500,\n\t\t\t});\n\t\t}\n\n\t\t// Wait one second\n\t\tawait new Promise((resolve) => setTimeout(resolve, 1000));\n\t}\n\n\treturn this.helpers.returnJsonArray({ sessionId, windowId, ...automationStatusResponse });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKO;AAEP,uBAAkD;AAClD,8BAIO;AACP,uBAA2B;AAGpB,MAAM,cAAiC;AAAA,EAC7C;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,IACA,UAAU;AAAA,IACV,SAAS;AAAA,IACT,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,aAAa;AAAA,QACxB,WAAW,CAAC,MAAM;AAAA,MACnB;AAAA,IACD;AAAA,IACA,aAAa;AAAA,IACb,aAAa;AAAA,EACd;AACD;AAEA,eAAsB,QAErB,OACA,UAAU,oCACsB;AAChC,QAAM,EAAE,WAAW,SAAS,IAAI,mDAA2B,KAAK,MAAM,KAAK;AAC3E,QAAM,WAAW,oDAA4B,KAAK,MAAM,OAAO,YAAY,WAAW;AAGtF,QAAM,0BAA0B,MAAM,4BAAW;AAAA,IAChD;AAAA,IACA;AAAA,IACA,mBAAmB,SAAS,YAAY,QAAQ;AAAA,IAChD;AAAA,MACC,cAAc;AAAA,MACd,YAAY;AAAA,QACX,YAAY;AAAA,MACb;AAAA,IACD;AAAA,EACD;AAEA,QAAM,QAAQ,wBAAwB;AAGtC,QAAM,YAAY,KAAK,IAAI;AAC3B,MAAI;AAEJ,SAAO,MAAM;AACZ,+BAA2B,MAAM,4BAAW,KAAK,MAAM,OAAO,aAAa,KAAK,SAAS;AACzF,UAAM,SAAS,0BAA0B,UAAU;AAEnD,2DAA0B,KAAK,QAAQ,GAAG,wBAAwB;AAElE,QAAI,WAAW,eAAe,WAAW,SAAS;AACjD;AAAA,IACD;AAEA,UAAM,cAAc,KAAK,IAAI,IAAI;AACjC,QAAI,eAAe,SAAS;AAC3B,YAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG;AAAA,QACtC,SAAS,gCAAe;AAAA,QACxB,MAAM;AAAA,MACP,CAAC;AAAA,IACF;AAGA,UAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,GAAI,CAAC;AAAA,EACzD;AAEA,SAAO,KAAK,QAAQ,gBAAgB,EAAE,WAAW,UAAU,GAAG,yBAAyB,CAAC;AACzF;","names":[]}