Checklist de Inicialização do Sistema OdontoFlow
Fase 1: Preparação do Ambiente Local e do Servidor (n8n)

(Estes passos garantem que o "motor" do seu sistema esteja ligado e acessível)

✅ Iniciar o Docker Desktop:

Ação: Execute o aplicativo Docker Desktop no seu computador Windows.

Verificação: Aguarde o status no aplicativo mudar para "Running" (Rodando) e o ícone da baleia na bandeja do sistema ficar estático.

✅ Iniciar o Container do n8n:

Ação:

Abra um terminal (PowerShell ou cmd).

Navegue até a pasta do seu projeto: cd C:\...\OdontoFlow-N8N.

Execute o comando: docker-compose up -d.

Verificação: O terminal deve confirmar que o container do n8n foi iniciado ("started"). Você pode verificar com o comando docker ps.

✅ Iniciar o Túnel do ngrok:

Ação:

Abra uma NOVA janela do terminal.

Navegue até a pasta do ngrok: cd C:\ngrok.

Execute o comando: ngrok http 5678.

Verificação: A tela de status do ngrok deve aparecer. Copie a nova URL Forwarding (ex: https://NOME-ALEATORIO.ngrok-free.app).

Lembrete: Mantenha esta janela do terminal aberta.

Fase 2: Atualização das Configurações de Conexão

(Como a URL do ngrok é dinâmica, precisamos atualizar os "pontos de contato" do sistema)

✅ Atualizar a Variável de Ambiente do n8n:

Ação:

Abra o arquivo docker-compose.yml no seu editor (VS Code, etc.).

Encontre a linha WEBHOOK_URL e cole a nova URL base do ngrok que você acabou de copiar (com a barra / no final).

Salve o arquivo.

Aplicação: Volte para o primeiro terminal (na pasta do projeto) e reinicie o container para aplicar a nova variável:

Generated bash
docker-compose down
docker-compose up -d


✅ Atualizar o Código do Site (Front-end):

Ação:

Abra o arquivo script.js do seu site no seu editor.

Encontre as variáveis AGENDAMENTO_WEBHOOK_URL e RECEPCIONISTA_WEBHOOK_URL.

Cole a nova URL completa do ngrok em ambas, adicionando o Path do webhook no final de cada uma (ex: /webhook/agendamento-online e /webhook/confirmacao).

Salve o arquivo.

Aplicação: Faça o upload do script.js atualizado para a sua pasta na Hostinger, substituindo o arquivo antigo.

Fase 3: Verificação Final e Ativação

(Garantindo que tudo está pronto para receber os dados)

✅ Verificar o n8n:

Ação: Abra seu navegador e acesse seu n8n em http://localhost:5678.

Verificação:

Vá para a seção "Workflows".

Certifique-se de que todos os seus workflows do OdontoFlow (Agendamento Online, Lembretes Diários, Recepcionista) estão com o botão de alternância Active (ligado/verde/azul).

✅ Limpar o Cache do Navegador (Passo Crucial):

Ação: Abra o seu site https://odontoflow.cloudmatrix.com.br no navegador.

Execute uma recarga completa forçada pressionando Ctrl + Shift + R (ou Cmd + Shift + R no Mac).

Verificação: Isso garante que seu navegador está usando a versão mais recente do script.js que você acabou de enviar, com a nova URL do ngrok.

----------------------------------------------------------------------------------------------------------------------------------------------

Fase 1: Preparação do Back-end (O Motor)

(O objetivo aqui é ligar o n8n e torná-lo acessível pela internet)

✅ Iniciar o Docker Desktop:

Ação: Execute o aplicativo Docker Desktop.

Verificação: Aguarde o status "Running" (Rodando).

✅ Iniciar o Container do n8n:

Ação: Em um terminal, navegue até a pasta OdontoFlow-N8N e execute docker-compose up -d.

Verificação: O container do n8n está "started" (docker ps).

✅ Iniciar o Túnel do ngrok:

Ação: Em um novo terminal, navegue até a pasta do ngrok e execute ngrok http 5678.

Ação Crítica: Copie a nova URL Forwarding (ex: https://NOME-ALEATORIO.ngrok-free.app).

Lembrete: Mantenha esta janela do terminal do ngrok aberta.

Fase 2: Preparação do Front-end (O Painel React)

(O objetivo aqui é configurar e rodar o seu painel em modo de desenvolvimento local, apontando para o motor que acabamos de ligar)

✅ Navegar para a Pasta do Painel React:

Ação: Em um terceiro terminal (ou na mesma janela do passo 2), navegue até a pasta do seu projeto React. Esta é uma pasta diferente da do n8n.

Generated bash
cd C:\Caminho\Para\Seu\Painel-React


✅ Atualizar a URL do n8n no Ambiente do React (Passo Crucial):

Ação:

Na pasta do seu projeto React, encontre e abra o arquivo chamado .env ou .env.local. (Se ele não existir, crie-o).

Este arquivo guarda as variáveis de ambiente do seu front-end.

Encontre a linha que define a URL base do n8n e cole a nova URL do ngrok que você copiou no passo 3. A linha deve se parecer com isto:

Generated code
REACT_APP_N8N_BASE_URL=https://NOME-ALEATORIO.ngrok-free.app
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
IGNORE_WHEN_COPYING_END

(O nome da variável, REACT_APP_N8N_BASE_URL, pode ser diferente, dependendo de como você a nomeou no seu código React. O importante é que ela contenha a URL do ngrok).

Salve o arquivo .env.local.

✅ Iniciar o Servidor de Desenvolvimento do React:

Ação: No terminal que está na pasta do projeto React, execute o comando:

Generated bash
npm start
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Bash
IGNORE_WHEN_COPYING_END

(ou yarn start se você usar o Yarn).

Verificação: Seu navegador deve abrir automaticamente com o seu painel OdontoFlow rodando em http://localhost:3000.

Fase 3: Verificação e Teste Final

✅ Verificar o n8n:

Ação: Em outra aba do navegador, acesse http://localhost:5678 para garantir que seus workflows estão ativos.

✅ Teste de Ponta a Ponta:

Ação: Interaja com o seu painel React em http://localhost:3000. Faça um novo agendamento.

Verificação: A requisição do painel React será enviada para a URL do ngrok, que a redirecionará para o seu n8n, e o agendamento será processado.

Quando For para Produção (Hospedagem na Hostinger)

Quando você estiver pronto para atualizar o site que está no ar na Hostinger, o processo é um pouco diferente:

Atualize a URL de Produção: No seu arquivo .env.local, certifique-se de que a REACT_APP_N8N_BASE_URL contém a URL do ngrok estável (ou, idealmente, a URL de um n8n hospedado em um VPS com domínio próprio).

Construa o Projeto (Build): No terminal, na pasta do React, pare o servidor de desenvolvimento (Ctrl+C) e execute o comando de "build":

Generated bash
npm run build
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Bash
IGNORE_WHEN_COPYING_END

Faça o Upload: Este comando criará uma pasta chamada build (ou dist). É o conteúdo desta pasta build que você deve enviar para a sua pasta public_html na Hostinger, substituindo os arquivos antigos.